/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 18:47:30 GMT 2023
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.org.apache.xerces.internal.dom.DocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      W3CDom w3CDom0 = new W3CDom();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Document document0 = new Document("9qMg!:%wGQ");
      parseSettings0.normalizeAttribute("N&zR");
      ParseSettings parseSettings1 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("ot", parseSettings0);
      Tag.valueOf("N&zR");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("xmlns", "ot");
      attributes0.put(attribute0);
      Attribute attribute1 = new Attribute("9qMg!:%wGQ", "html", attributes0);
      Attributes attributes1 = attributes0.put(attribute1);
      attributes0.put(attribute1);
      Attributes attributes2 = attributes1.put(":parent%s", "N&zR");
      Element element0 = new Element(tag0, "tMe=qP5", attributes2);
      element0.getAllElements();
      element0.attr("jy7C9i", "");
      document0.appendChild(element0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Document document0 = new Document("9qMg!:%wGQ");
      ParseSettings parseSettings1 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("ot", parseSettings0);
      Attributes attributes0 = document0.attributes();
      Attribute attribute0 = new Attribute("9qMg!:%wGQ", "html", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      Element element0 = new Element(tag0, "ot", attributes1);
      Document document1 = (Document)document0.appendChild(element0);
      DocumentImpl documentImpl0 = (DocumentImpl)w3CDom0.fromJsoup(document1);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(documentImpl0);
      DataNode dataNode0 = new DataNode("9qMg!:%wGQ");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, (-2982));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = new Document("xmlns");
      W3CDom w3CDom0 = new W3CDom();
      document0.attr("xmlns", "xmlns");
      document0.appendChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document document0 = new Document("xmlns:tfoot");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = (Document)document0.attr("xmlns:tfoot", "xmlns:tfoot");
      document0.appendChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Document document0 = new Document("9qMg!:%wGQ");
      ParseSettings parseSettings1 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("ot", parseSettings0);
      Document document1 = document0.ownerDocument();
      Attributes attributes0 = document1.attributes();
      Attribute attribute0 = new Attribute("xmlns:9qmg!:%wgq", "9qmg!:", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, "xmlns:", attributes0);
      Element element1 = new Element("xmlns:html");
      document0.appendChild(element0);
      org.w3c.dom.Document document2 = w3CDom0.fromJsoup(document1);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("html", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "", attributes0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      Comment comment0 = new Comment("*4yeyXy4", "AU)WKk42WN=");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(comment0, 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("9Mg!%wGQ");
      Attributes attributes0 = document0.attributes();
      attributes0.put("9Mg!%wGQ", "ScriptDataEndTagName");
      Tag tag0 = Tag.valueOf("ScriptDataEndTagName");
      Element element0 = new Element(tag0, "ScriptDataEndTagName", attributes0);
      document0.appendChild(element0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = new Document("tfoot");
      document0.tagName("tfoot");
      W3CDom w3CDom0 = new W3CDom();
      Document document1 = (Document)document0.attr("tfoot", "tfoot");
      document0.appendChild(document1);
      // Undeclared exception!
      w3CDom0.fromJsoup(document1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragmentRelaxed("", "*4*<DXa");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      document0.parent();
      w3CDom_W3CBuilder0.head((Node) null, 100);
      W3CDom.W3CBuilder w3CDom_W3CBuilder1 = new W3CDom.W3CBuilder(document1);
      assertFalse(w3CDom_W3CBuilder1.equals((Object)w3CDom_W3CBuilder0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document(":[Smtg?3f)g-W68?}");
      Element element0 = document0.val(":[Smtg?3f)g-W68?}");
      document0.appendChild(element0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("xmlns:(GnyEv|]", "xmlns:(GnyEv|]");
      document0.prependElement("xmlns:(GnyEv|]");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("e4a>AE", "e4a>AE");
      W3CDom w3CDom0 = new W3CDom();
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = w3CDom0.asString((org.w3c.dom.Document) null);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document(":[Smtg?3f)g-W68?}");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = new Document("");
      W3CDom w3CDom0 = new W3CDom();
      document0.appendChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Document document0 = Document.createShell("6.oxp.ffs=");
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.fromJsoup(document0);
  }
}
