/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 10:22:35 GMT 2023
 */

package org.apache.commons.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thoughtworks.xstream.io.StreamException;
import java.io.StringReader;
import org.apache.commons.csv.ExtendedBufferedReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.testcarver.testcase.EvoSuiteXStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtendedBufferedReader_ESTest extends ExtendedBufferedReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader1.lookAhead();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.read();
      char[] charArray0 = new char[2];
      charArray0[0] = 'C';
      extendedBufferedReader1.read(charArray0);
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader3.readLine();
      ExtendedBufferedReader extendedBufferedReader4 = new ExtendedBufferedReader(extendedBufferedReader1);
      String string0 = extendedBufferedReader3.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a\rb\rc");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      stringReader0.read();
      extendedBufferedReader0.lookAhead();
      extendedBufferedReader1.read();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      String string0 = extendedBufferedReader1.readLine();
      extendedBufferedReader0.readLine();
      String string1 = extendedBufferedReader1.readLine();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      extendedBufferedReader1.readLine();
      StringReader stringReader1 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader2.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("a,\"b\nc\"");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 't';
      int int0 = extendedBufferedReader1.read(charArray0);
      assertEquals((-1), int0);
      
      StringReader stringReader1 = new StringReader("a,\"b\nc\"");
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      int int1 = extendedBufferedReader2.getLineNumber();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("a,\"b\nc\"");
      stringReader0.ready();
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      char[] charArray0 = new char[2];
      charArray0[0] = 'Q';
      int int0 = ExtendedBufferedReader.UNDEFINED;
      extendedBufferedReader0.readAgain();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("a,\"b", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      String string0 = extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("${b/W&pGkb");
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string1 = extendedBufferedReader1.readLine();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" foo");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.read();
      assertEquals(32, int0);
      
      extendedBufferedReader0.readLine();
      Object object0 = new Object();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("foo\r\nbaar,\r\nhello,world\r\n,kanu");
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(stringReader0);
      int int1 = extendedBufferedReader1.getLineNumber();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("@'8cl<{K");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.getLineNumber();
      assertEquals(0, int0);
      
      int int1 = extendedBufferedReader0.read((char[]) null, 0, 0);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.read();
      extendedBufferedReader1.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      String string0 = extendedBufferedReader2.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("@'8cl<{K");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0$ 40gKpq-");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("0$ 40gKpq-", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n\t \n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" foo");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.read();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      // Undeclared exception!
      try { 
        EvoSuiteXStream.fromString("foo");
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         // 
         //
         verifyException("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }
}
