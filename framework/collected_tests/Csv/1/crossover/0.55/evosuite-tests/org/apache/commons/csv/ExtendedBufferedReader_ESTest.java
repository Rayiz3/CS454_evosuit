/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 10:38:11 GMT 2023
 */

package org.apache.commons.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thoughtworks.xstream.io.StreamException;
import java.io.IOException;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.apache.commons.csv.ExtendedBufferedReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.testcarver.testcase.EvoSuiteXStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtendedBufferedReader_ESTest extends ExtendedBufferedReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\r\n\r\nworld,\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      stringReader0.read(charBuffer0);
      extendedBufferedReader0.ready();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.read();
      extendedBufferedReader1.read();
      extendedBufferedReader0.readLine();
      String string0 = extendedBufferedReader1.readLine();
      String string1 = extendedBufferedReader1.readLine();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\r\n\r\nworld,\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      charBuffer0.append('\\');
      stringReader0.read(charBuffer0);
      extendedBufferedReader0.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'm';
      stringReader0.read(charArray0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      int int0 = extendedBufferedReader2.read();
      assertEquals(10, int0);
      
      extendedBufferedReader2.readLine();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader2);
      int int1 = ExtendedBufferedReader.UNDEFINED;
      extendedBufferedReader1.readLine();
      stringReader0.reset();
      ExtendedBufferedReader extendedBufferedReader4 = new ExtendedBufferedReader(extendedBufferedReader3);
      int int2 = ExtendedBufferedReader.UNDEFINED;
      extendedBufferedReader2.readLine();
      String string0 = extendedBufferedReader2.readLine();
      assertEquals("hello,", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\r\n\r\nworld,\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      stringReader0.read(charBuffer0);
      extendedBufferedReader0.ready();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.read();
      extendedBufferedReader1.read();
      try { 
        extendedBufferedReader1.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream not marked
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\r\n\r\nworld,\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      stringReader0.read(charBuffer0);
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'm';
      stringReader0.read(charArray0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader2.read();
      extendedBufferedReader2.markSupported();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\r\n\r\nworld,\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.read();
      extendedBufferedReader0.markSupported();
      String string0 = extendedBufferedReader1.readLine();
      assertEquals("ello,", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\r\n\r\nworld,\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      stringReader0.read(charBuffer0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U?/n!?K {G}'{");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = extendedBufferedReader1.lookAhead();
      assertEquals(85, int0);
      
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      int int1 = ExtendedBufferedReader.END_OF_STREAM;
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"`");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.readAgain();
      assertEquals((-2), int0);
      
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      Object object0 = new Object();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader1);
      int int1 = extendedBufferedReader2.read();
      assertEquals(34, int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"`");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("\"`");
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader1);
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = 'S';
      charArray0[2] = 'S';
      extendedBufferedReader0.read(charArray0);
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader2);
      ExtendedBufferedReader extendedBufferedReader4 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader4.readLine();
      extendedBufferedReader0.readLine();
      // Undeclared exception!
      try { 
        EvoSuiteXStream.fromString("\"`");
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         // 
         //
         verifyException("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"`");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader1.read();
      // Undeclared exception!
      try { 
        EvoSuiteXStream.fromString("Bs6)g");
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         // 
         //
         verifyException("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pEC=");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = extendedBufferedReader1.getLineNumber();
      assertEquals(0, int0);
      
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertEquals("pEC=", string0);
      assertNotNull(string0);
      
      extendedBufferedReader1.readLine();
      extendedBufferedReader1.readLine();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader3.readLine();
      ExtendedBufferedReader extendedBufferedReader4 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader1.readLine();
      extendedBufferedReader0.readLine();
      Object object0 = new Object();
      int int1 = extendedBufferedReader3.read();
      assertEquals((-1), int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.readLine();
      extendedBufferedReader1.readLine();
      char[] charArray0 = new char[1];
      charArray0[0] = 'q';
      extendedBufferedReader0.read(charArray0);
      // Undeclared exception!
      try { 
        EvoSuiteXStream.fromString("J}:zw4c2_");
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         // 
         //
         verifyException("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U?/!?K {G}'{");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.read();
      assertEquals(85, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("4", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("U?/!?K {G}'{");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertEquals("U?/!?K {G}'{", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!hB7uQ&]");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      char[] charArray0 = new char[0];
      int int0 = extendedBufferedReader0.read(charArray0, (-2), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.lookAhead();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("s");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("s", string0);
  }
}
