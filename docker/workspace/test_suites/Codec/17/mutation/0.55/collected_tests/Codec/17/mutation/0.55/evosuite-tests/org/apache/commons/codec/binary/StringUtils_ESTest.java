/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 15 23:27:41 GMT 2023
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import org.apache.commons.codec.binary.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      StringUtils.getBytesUnchecked((String) null, ")$4Q X_?-");
      String string0 = StringUtils.newStringUtf8(byteArray0);
      assertEquals("\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("76N34`uM<y6KEx3|bvz");
      StringUtils.newStringUtf8(byteArray0);
      StringUtils.newStringUsAscii(byteArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "76N34`uM<y6KEx3|bvz");
      charBuffer0.mark();
      boolean boolean0 = StringUtils.equals((CharSequence) "76N34`uM<y6KEx3|bvz", (CharSequence) charBuffer0);
      boolean boolean1 = StringUtils.equals((CharSequence) "76N34`uM<y6KEx3|bvz", (CharSequence) "76N34`uM<y6KEx3|bvz");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = StringUtils.newString((byte[]) null, "RImJ`g[l^^pqlv");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "Ud13<";
      byte[] byteArray0 = StringUtils.getBytesIso8859_1("Ud13<");
      StringUtils.newStringUtf16Be(byteArray0);
      StringUtils.newStringIso8859_1(byteArray0);
      StringUtils.newStringUtf16(byteArray0);
      String string1 = "92]m`CHm';{";
      StringUtils.getBytesUtf16Le("92]m`CHm';{");
      StringUtils.getBytesUtf8("\u5564\u3133\uFFFD");
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.getBytesUtf8("92]m`CHm';{");
      StringUtils.getByteBufferUtf8((String) null);
      String string2 = "Oz>xXc";
      StringUtils.getByteBufferUtf8("Oz>xXc");
      StringUtils.equals((CharSequence) "\u5564\u3133\uFFFD", (CharSequence) null);
      StringUtils.equals((CharSequence) null, (CharSequence) "Ud13<");
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("Oz>xXc", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      StringUtils.newStringUsAscii(byteArray0);
      CharBuffer.wrap((CharSequence) "\u0001");
      StringUtils stringUtils0 = new StringUtils();
      ByteBuffer byteBuffer0 = StringUtils.getByteBufferUtf8("");
      assertFalse(byteBuffer0.isReadOnly());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      StringUtils.newStringUsAscii(byteArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\u0000");
      StringUtils.newStringUsAscii(byteArray0);
      StringUtils.newStringIso8859_1(byteArray0);
      boolean boolean0 = StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "\u0000");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte)0;
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray0, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)117;
      StringUtils.newStringUtf16Be(byteArray0);
      StringUtils stringUtils0 = new StringUtils();
      String string0 = StringUtils.newStringUtf8(byteArray0);
      assertEquals("(-u", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("");
      StringUtils.newStringIso8859_1(byteArray0);
      StringUtils.equals((CharSequence) "", (CharSequence) "");
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("76N34`uM<y6KEx3|bvz");
      StringUtils.newStringUtf8(byteArray0);
      CharBuffer.wrap((CharSequence) "");
      boolean boolean0 = StringUtils.equals((CharSequence) "76N34`uM<y6KEx3|bvz", (CharSequence) "76N34`uM<y6KEx3|bvz");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-2);
      StringUtils.newStringUtf16(byteArray0);
      StringUtils.getBytesIso8859_1((String) null);
      // Undeclared exception!
      try { 
        StringUtils.newStringIso8859_1((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      StringUtils.newStringUsAscii(byteArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\u0001");
      boolean boolean0 = StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "\u0001");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.getBytesIso8859_1("QDwsY5iR5xi)");
      StringUtils.getBytesUtf8("U${udWOM^F:!~y/h");
      byte[] byteArray0 = StringUtils.getBytesUtf8("");
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("76N34`uM<y6KEx3|bvz");
      StringUtils.newStringUtf8(byteArray0);
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("76N34`uM<y6KEx3|bvz", "76N34`uM<y6KEx3|bvz");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 76N34`uM<y6KEx3|bvz: java.io.UnsupportedEncodingException: 76N34`uM<y6KEx3|bvz
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Be("");
      StringUtils.getBytesUtf16("");
      StringUtils.newStringUtf16Le(byteArray0);
      StringUtils.getBytesUsAscii("");
      byte[] byteArray1 = StringUtils.getBytesIso8859_1("+Z4[nVcBIeSc]^MK");
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringUtils.newStringUtf16Le((byte[]) null);
      StringUtils.getBytesUtf8((String) null);
      byte[] byteArray0 = StringUtils.getBytesUsAscii(": ");
      assertArrayEquals(new byte[] {(byte)58, (byte)32}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16Be(": ");
      assertNotNull(byteArray0);
      
      boolean boolean0 = StringUtils.equals((CharSequence) ": ", (CharSequence) ": ");
      assertTrue(boolean0);
  }
}
