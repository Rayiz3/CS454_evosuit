/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 18:30:32 GMT 2023
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("lns:zzcfv[");
      document0.tagName("xmJns");
      Document document1 = (Document)document0.attr("%9A)%$", "xmJns");
      document0.appendChild(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("xmlns");
      Element element0 = document0.attr("xmlns", "xmlns");
      document0.appendTo(element0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("t6R0wk/dDP!26CW6:a");
      document0.tagName("t6R0wk/dDP!26CW6:a");
      document0.appendChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("/VvDRstxVv7JlzH:oD", "/VvDRstxVv7JlzH:oD");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.asString(document1);
      Document document2 = Parser.parseBodyFragment("<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</head>\n<body>/VvDRstxVv7JlzH:oD</body>\n</html>\n", "/VvDRstxVv7JlzH:oD");
      org.w3c.dom.Document document3 = w3CDom0.fromJsoup(document2);
      assertNotSame(document3, document1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      ParseSettings parseSettings1 = ParseSettings.preserveCase;
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      DataNode dataNode0 = DataNode.createFromEncoded("", "");
      dataNode0.setWholeData("Nz\"<'(-?GA~");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(dataNode0, 314);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("2_i$b");
      Element element0 = document0.addClass("2_i$b");
      document0.appendChild(element0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("xmlns:zzcfv[");
      Document document1 = (Document)document0.attr("xmlns:zzcfv[", "xmlns:zzcfv[");
      document0.appendChild(document1);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Document document0 = Parser.parse("y$:not", "y$:not");
      document0.select("#root");
      document0.previousSibling();
      W3CDom w3CDom0 = new W3CDom();
      W3CDom w3CDom1 = new W3CDom();
      org.w3c.dom.Document document1 = w3CDom1.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.head((Node) null, 1453);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("Y0>", "Y0>");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.asString((org.w3c.dom.Document) null);
      Document document2 = Parser.parseBodyFragment("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>");
      org.w3c.dom.Document document3 = w3CDom0.fromJsoup(document2);
      assertNotSame(document3, document1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = w3CDom0.asString((org.w3c.dom.Document) null);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      W3CDom w3CDom1 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("olB", "olB");
      w3CDom0.fromJsoup(document0);
  }
}
