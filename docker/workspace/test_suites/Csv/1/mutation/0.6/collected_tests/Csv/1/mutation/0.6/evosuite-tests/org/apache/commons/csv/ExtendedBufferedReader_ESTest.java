/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 10:35:33 GMT 2023
 */

package org.apache.commons.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thoughtworks.xstream.io.StreamException;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.apache.commons.csv.ExtendedBufferedReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.testcarver.testcase.EvoSuiteXStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtendedBufferedReader_ESTest extends ExtendedBufferedReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer.wrap(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("a\rb\rc");
      StringReader stringReader1 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      extendedBufferedReader0.read(charBuffer0);
      extendedBufferedReader0.read();
      extendedBufferedReader0.read();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'I';
      CharBuffer.wrap(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("one,two,three\non\"e,two\non\"e,two\none,\"tw\"o\"\none,\"t,wo\"\none,two,\"th,ree\"\n\"a\\\"\na,b\n\"a\\,b\"");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      StringReader stringReader1 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.read();
      ExtendedBufferedReader extendedBufferedReader4 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader5 = new ExtendedBufferedReader(stringReader1);
      extendedBufferedReader2.read(charBuffer0);
      assertArrayEquals(new char[] {'n'}, charArray0);
      
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader6 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader7 = new ExtendedBufferedReader(extendedBufferedReader2);
      ExtendedBufferedReader extendedBufferedReader8 = new ExtendedBufferedReader(extendedBufferedReader5);
      int int0 = extendedBufferedReader4.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'I';
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("one,two,three\non\"e,iwo\non\"e,two\none,\"tw\"o\"\none,\"t,wo\"\none,two,\"thgree\"\n\"a\\\"\na,b\n\"a\\,b\"");
      StringReader stringReader1 = new StringReader("one,two,three\non\"e,iwo\non\"e,two\none,\"tw\"o\"\none,\"t,wo\"\none,two,\"thgree\"\n\"a\\\"\na,b\n\"a\\,b\"");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertEquals("one,two,three", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = ';';
      charArray0[2] = '~';
      charArray0[3] = '9';
      charArray0[4] = 'S';
      charArray0[5] = '7';
      charArray0[6] = 'G';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader(".ie8<Z$rYJz6eq4#z3");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      StringReader stringReader1 = new StringReader("one\ttwo\t\tfour \t five\t six");
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader2);
      extendedBufferedReader3.read();
      ExtendedBufferedReader extendedBufferedReader4 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader4.lookAhead();
      ExtendedBufferedReader extendedBufferedReader5 = new ExtendedBufferedReader(stringReader1);
      extendedBufferedReader5.read(charBuffer0);
      extendedBufferedReader2.readLine();
      ExtendedBufferedReader extendedBufferedReader6 = new ExtendedBufferedReader(extendedBufferedReader4);
      ExtendedBufferedReader extendedBufferedReader7 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader7.read(charBuffer1);
      assertArrayEquals(new char[] {'o', 'n', 'e', '\t', 't', 'w', 'o'}, charArray0);
      
      ExtendedBufferedReader extendedBufferedReader8 = new ExtendedBufferedReader(stringReader1);
      int int0 = extendedBufferedReader1.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[1] = ']';
      charArray0[2] = ']';
      charArray0[3] = ']';
      charArray0[4] = ']';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.flip();
      extendedBufferedReader0.read(charBuffer0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.lookAhead();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("The delimiter cannot be a line break");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      extendedBufferedReader0.read(charBuffer0);
      extendedBufferedReader0.lookAhead();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("The delimiter cannot be a line break", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader2.readLine();
      extendedBufferedReader0.readLine();
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '3';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      extendedBufferedReader1.read(charBuffer0);
      extendedBufferedReader2.lookAhead();
      String string0 = extendedBufferedReader2.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      extendedBufferedReader0.read(charBuffer0);
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader2.readLine();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader2);
      String string0 = extendedBufferedReader3.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = 'K';
      charArray0[2] = 'j';
      charArray0[3] = 'T';
      charArray0[4] = 'd';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      extendedBufferedReader1.read(charBuffer0);
      char[] charArray1 = new char[9];
      // Undeclared exception!
      try { 
        extendedBufferedReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void testReadLinetestReadLine_09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      StringReader stringReader1 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader2.readLine();
      extendedBufferedReader0.readLine();
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '3';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put(charArray0);
      extendedBufferedReader1.read(charBuffer0);
      extendedBufferedReader2.lookAhead();
      String string0 = extendedBufferedReader2.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LNUPk");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      char[] charArray0 = new char[1];
      CharBuffer.wrap(charArray0);
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.lookAhead();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("LNUPk", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertNotNull(string0);
      assertEquals("Gp#!s,Zf8)L CE", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = extendedBufferedReader1.read();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("w", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.lookAhead();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("Gp#!s,Zf8)L CE", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Gp#!s,Zf8)L CE");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.read();
      assertEquals(71, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jp_,.y20lcdG%5S");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readAgain();
      // Undeclared exception!
      try { 
        EvoSuiteXStream.fromString("org.apache.commons.csv.ExtendedBufferedReader");
        fail("Expecting exception: StreamException");
      
      } catch(StreamException e) {
         //
         // 
         //
         verifyException("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }
}
