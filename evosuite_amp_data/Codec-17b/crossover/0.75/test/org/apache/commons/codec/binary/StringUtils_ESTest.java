/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 15 22:13:22 GMT 2023
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.codec.binary.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("MuwoAfxi+");
      StringUtils.newStringIso8859_1(byteArray0);
      CharBuffer.allocate(324);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "MuwoAfxi+");
      StringUtils.equals((CharSequence) "MuwoAfxi+", (CharSequence) "");
      StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "MuwoAfxi+");
      StringUtils.equals((CharSequence) "MuwoAfxi+", (CharSequence) charBuffer0);
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray0, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(324);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
      StringUtils.getBytesUtf16Le("g;R");
      StringUtils.equals((CharSequence) "", (CharSequence) "");
      byte[] byteArray0 = StringUtils.getBytesIso8859_1("");
      StringUtils.newStringUsAscii(byteArray0);
      boolean boolean0 = StringUtils.equals((CharSequence) "", (CharSequence) "");
      assertTrue(boolean0);
      
      StringUtils.equals((CharSequence) charBuffer1, (CharSequence) charBuffer0);
      // Undeclared exception!
      try { 
        StringUtils.equals((CharSequence) "", (CharSequence) charBuffer0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringUtils.getBytesUsAscii("");
      StringUtils.getByteBufferUtf8("");
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.getBytesUtf16Be((String) null);
      StringUtils.getBytesUsAscii("VtI*;7o6y=X~D|");
      StringUtils stringUtils1 = new StringUtils();
      StringUtils.equals((CharSequence) null, (CharSequence) null);
      StringUtils.equals((CharSequence) "c%p;y%<W!5h^37", (CharSequence) "");
      CharBuffer charBuffer0 = CharBuffer.allocate(726);
      StringUtils.equals((CharSequence) "c%p;y%<W!5h^37", (CharSequence) "");
      String string0 = "4A#";
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("4A#");
      StringUtils.equals((CharSequence) "c%p;y%<W!5h^37", (CharSequence) null);
      StringUtils.equals((CharSequence) charBuffer0, (CharSequence) "c%p;y%<W!5h^37");
      String string1 = "";
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray0, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringUtils.getByteBufferUtf8("");
      StringUtils stringUtils0 = new StringUtils();
      String string0 = "c%p;y%<W!5h^37";
      StringUtils.getBytesUtf16Le((String) null);
      StringUtils.newString((byte[]) null, "c%p;y%<W!5h^37");
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("org.apache.commons.codec.binary.StringUtils", "]s=YkExfCDE>cp");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // ]s=YkExfCDE>cp: java.io.UnsupportedEncodingException: ]s=YkExfCDE>cp
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(324);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
      charBuffer0.put("", 0, 0);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer1);
      assertTrue(charBuffer2.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringUtils.getByteBufferUtf8((String) null);
      StringUtils stringUtils0 = new StringUtils();
      String string0 = "57XX6jnI";
      byte[] byteArray0 = StringUtils.getBytesUsAscii("57XX6jnI");
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(324);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      StringUtils.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
      byte[] byteArray0 = StringUtils.getBytesUtf16Le("g;R");
      boolean boolean0 = StringUtils.equals((CharSequence) "", (CharSequence) "");
      byte[] byteArray1 = StringUtils.getBytesIso8859_1("");
      StringUtils.newStringUsAscii(byteArray1);
      boolean boolean1 = StringUtils.equals((CharSequence) ": ", (CharSequence) "");
      assertFalse(boolean1 == boolean0);
      
      StringUtils.newStringUsAscii(byteArray0);
      boolean boolean2 = StringUtils.equals((CharSequence) null, (CharSequence) "");
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringUtils.getByteBufferUtf8("");
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.getBytesUtf16("");
      StringUtils.getBytesUtf16Le("");
      StringUtils.getBytesUnchecked((String) null, "cE@V");
      StringUtils.newStringUsAscii((byte[]) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)0;
      StringUtils.newStringUtf16(byteArray0);
      StringUtils.getBytesUsAscii((String) null);
      StringUtils.getBytesUtf16Le("I@_A");
      String string0 = StringUtils.newStringUtf16Be((byte[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)0;
      String string0 = StringUtils.newStringUtf16Be(byteArray0);
      assertEquals("\u4A00", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringUtils.equals((CharSequence) null, (CharSequence) null);
      byte[] byteArray0 = StringUtils.getBytesUtf16("");
      StringUtils.newStringUtf8(byteArray0);
      StringUtils.equals((CharSequence) "", (CharSequence) null);
      byte[] byteArray1 = StringUtils.getBytesUtf16Be("");
      StringUtils.newStringIso8859_1(byteArray1);
      StringUtils.getBytesUtf8("");
      StringUtils.newStringIso8859_1(byteArray1);
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.newStringUtf16(byteArray1);
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked(" }pf|LNkU`-l_^)bU", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.equals((CharSequence) "", (CharSequence) "");
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("enought", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("");
      StringUtils.newStringIso8859_1(byteArray0);
      String string0 = "Pej,";
      byte[] byteArray1 = StringUtils.getBytesUtf16Le("Pej,");
      StringUtils.equals((CharSequence) "", (CharSequence) "Pej,");
      StringUtils.newStringUtf16Le(byteArray1);
      StringUtils.equals((CharSequence) "Pej,", (CharSequence) "Pej,");
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray1, "dAJs7!U:~");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // dAJs7!U:~: java.io.UnsupportedEncodingException: dAJs7!U:~
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringUtils.getByteBufferUtf8("");
      StringUtils.getBytesUtf16Le("");
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("E", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = StringUtils.getBytesUtf16Be("");
      StringUtils.newStringIso8859_1(byteArray0);
      StringUtils.equals((CharSequence) "", (CharSequence) "");
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray0, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)1;
      String string0 = StringUtils.newStringUtf16(byteArray0);
      assertEquals("\u1701", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("");
      String string0 = StringUtils.newStringUsAscii(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringUtils.getBytesIso8859_1("?");
      byte[] byteArray0 = StringUtils.getBytesUsAscii("?");
      String string0 = StringUtils.newStringUtf8(byteArray0);
      assertEquals("?", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUsAscii("-'VDAc&o4ar~?4");
      StringUtils.getBytesUtf8("Rme\"'XFc|!V~0");
      StringUtils stringUtils0 = new StringUtils();
      StringUtils.equals((CharSequence) "Rme\"'XFc|!V~0", (CharSequence) "Rme\"'XFc|!V~0");
      StringUtils.newStringIso8859_1(byteArray0);
      StringUtils.getBytesUsAscii("Rme\"'XFc|!V~0");
      byte[] byteArray1 = StringUtils.getBytesUtf16Be("-'VDAc&o4ar~?4");
      StringUtils.getBytesUtf16("-'VDAc&o4ar~?4");
      StringUtils.getBytesIso8859_1("_'D!_");
      byte[] byteArray2 = StringUtils.getBytesUtf8("(% Hi`4Mlj");
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = StringUtils.getBytesUtf16("k=y~e?z");
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = StringUtils.getBytesUsAscii("");
      StringUtils.newStringIso8859_1(byteArray0);
      StringUtils.equals((CharSequence) "", (CharSequence) "");
      // Undeclared exception!
      try { 
        StringUtils.newString(byteArray0, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // : java.io.UnsupportedEncodingException: 
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-36);
      StringUtils.newStringUtf16(byteArray0);
      // Undeclared exception!
      try { 
        StringUtils.getBytesUnchecked("", "\uFFFD\u0000\u0000\u0000\u0000");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // \uFFFD\u0000\u0000\u0000\u0000: java.io.UnsupportedEncodingException: \uFFFD\u0000\u0000\u0000\u0000
         //
         verifyException("org.apache.commons.codec.binary.StringUtils", e);
      }
  }
}
