/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 10:32:54 GMT 2023
 */

package org.apache.commons.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.apache.commons.csv.ExtendedBufferedReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtendedBufferedReader_ESTest extends ExtendedBufferedReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      extendedBufferedReader0.getLineNumber();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader0);
      char[] charArray0 = new char[4];
      extendedBufferedReader2.read(charBuffer0);
      charArray0[1] = 'J';
      extendedBufferedReader2.read(charArray0, 1, 1);
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(stringReader1);
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      extendedBufferedReader0.read(charArray0, 8, 0);
      String string0 = extendedBufferedReader1.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      extendedBufferedReader0.getLineNumber();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader0);
      char[] charArray0 = new char[4];
      extendedBufferedReader2.read(charBuffer0);
      charArray0[1] = 'J';
      charArray0[2] = 'c';
      extendedBufferedReader2.read(charArray0);
      extendedBufferedReader2.read();
      extendedBufferedReader1.read();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader3.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ab\n\"\n\",\"  \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.read();
      extendedBufferedReader1.read();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader2.readLine();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.read();
      extendedBufferedReader0.read();
      extendedBufferedReader1.readLine();
      String string0 = extendedBufferedReader1.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      stringReader0.read();
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.read();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.readAgain();
      CharBuffer charBuffer0 = CharBuffer.allocate(2358);
      extendedBufferedReader0.read(charBuffer0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.read();
      extendedBufferedReader1.read();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ab\n\"\n\",\"  \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.readLine();
      int int0 = ExtendedBufferedReader.END_OF_STREAM;
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      char[] charArray0 = new char[0];
      extendedBufferedReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("a,b\n\"\n\",\" \"\n\"\",#\n");
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader2.readLine();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(stringReader1);
      extendedBufferedReader0.read();
      extendedBufferedReader0.readLine();
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("\",\" \"", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NuE$");
      stringReader0.ready();
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      StringReader stringReader1 = new StringReader("NuE$");
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader1.readAgain();
      CharBuffer charBuffer0 = CharBuffer.allocate(8179);
      extendedBufferedReader0.read(charBuffer0);
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.read();
      extendedBufferedReader2.read();
      String string0 = extendedBufferedReader2.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader1.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = extendedBufferedReader2.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      int int0 = extendedBufferedReader1.read();
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*-l^r,f<Tm?Nr0@e");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.getLineNumber();
      assertEquals(0, int0);
      
      int int1 = extendedBufferedReader0.readAgain();
      assertEquals((-2), int1);
      
      int int2 = extendedBufferedReader0.read();
      assertEquals(42, int2);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NuE$");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.read();
      assertEquals(78, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      int int0 = extendedBufferedReader0.read();
      assertEquals(69, int0);
      
      int int1 = extendedBufferedReader0.lookAhead();
      extendedBufferedReader0.readLine();
      int int2 = extendedBufferedReader0.read();
      assertTrue(int2 == int1);
      assertEquals((-1), int2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NuE$");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("NuE$", string0);
  }
}
