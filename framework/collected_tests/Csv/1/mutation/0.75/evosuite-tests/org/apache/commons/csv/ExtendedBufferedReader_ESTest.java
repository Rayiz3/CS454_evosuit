/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 16 10:20:02 GMT 2023
 */

package org.apache.commons.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import org.apache.commons.csv.ExtendedBufferedReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.testcarver.testcase.EvoSuiteXStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtendedBufferedReader_ESTest extends ExtendedBufferedReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ellj,\"\"\rv\n\n\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.readLine();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\"\"\r\n\r\n\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader2.read();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader3.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'm';
      charArray0[1] = '%';
      charArray0[2] = 'A';
      charArray0[3] = 'e';
      charArray0[4] = '9';
      charArray0[5] = '-';
      charArray0[6] = '9';
      extendedBufferedReader3.read(charArray0);
      extendedBufferedReader3.readLine();
      extendedBufferedReader3.readLine();
      char[] charArray1 = new char[2];
      charArray1[0] = 'A';
      String string0 = extendedBufferedReader2.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(startline ");
      StringReader stringReader1 = new StringReader("hello,\r\n\r\nworld,\"\"\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader1);
      extendedBufferedReader0.markSupported();
      extendedBufferedReader0.read();
      extendedBufferedReader0.readAgain();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.lookAhead();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'L';
      charArray0[1] = 'a';
      charArray0[2] = '/';
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\"\"\r\n\r\n\r\n");
      stringReader0.ready();
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader1.mark(37);
      extendedBufferedReader0.markSupported();
      extendedBufferedReader0.read();
      int int0 = ExtendedBufferedReader.UNDEFINED;
      extendedBufferedReader0.readLine();
      extendedBufferedReader1.markSupported();
      extendedBufferedReader1.readLine();
      extendedBufferedReader0.readLine();
      String string0 = extendedBufferedReader1.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\"\"\r\n\r\n\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.readLine();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader2.read();
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader3.readLine();
      String string0 = extendedBufferedReader3.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\"\"\r\n\r\n\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      String string1 = extendedBufferedReader0.readLine();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\"\r\nc\n\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      extendedBufferedReader0.read();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.read();
      extendedBufferedReader1.readLine();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hello,\"\"\r\n\r\n\r\n");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader0.readLine();
      String string1 = extendedBufferedReader1.readLine();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p$x2r@_");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertNotNull(string0);
      assertEquals("._p$x2r@_", string0);
      
      extendedBufferedReader1.readLine();
      String string1 = extendedBufferedReader0.readLine();
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(startline ");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.mark(37);
      extendedBufferedReader0.markSupported();
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.read();
      extendedBufferedReader0.readAgain();
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader1.lookAhead();
      ExtendedBufferedReader extendedBufferedReader2 = new ExtendedBufferedReader(extendedBufferedReader1);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "(startline ");
      ExtendedBufferedReader extendedBufferedReader3 = new ExtendedBufferedReader(extendedBufferedReader1);
      extendedBufferedReader3.read(charBuffer0);
      extendedBufferedReader1.read();
      extendedBufferedReader0.reset();
      assertNotSame(extendedBufferedReader0, extendedBufferedReader1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader0.readLine();
      assertEquals("-", string0);
      
      int int0 = extendedBufferedReader0.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p$x2r@_");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader0.readLine();
      char[] charArray0 = new char[0];
      int int0 = extendedBufferedReader0.read(charArray0, 430, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p$x2r@_");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readAgain();
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "._p$x2r@_");
      // Undeclared exception!
      try { 
        extendedBufferedReader0.read(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.lookAhead();
      char[] charArray0 = new char[5];
      charArray0[0] = '!';
      charArray0[1] = 'V';
      charArray0[2] = 'a';
      charArray0[3] = 'D';
      charArray0[4] = 'n';
      extendedBufferedReader0.read(charArray0);
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(extendedBufferedReader0);
      extendedBufferedReader1.read();
      try { 
        extendedBufferedReader1.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream not marked
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      extendedBufferedReader0.lookAhead();
      ExtendedBufferedReader extendedBufferedReader1 = new ExtendedBufferedReader(stringReader0);
      String string0 = extendedBufferedReader1.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("foo");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.readLine();
      String string0 = extendedBufferedReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void testReadLinetestReadLinetestReadLinetestReadLinetestReadLinetestReadLine_16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pk");
      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);
      extendedBufferedReader0.getLineNumber();
      ExtendedBufferedReader extendedBufferedReader1 = null;
      try {
        extendedBufferedReader1 = new ExtendedBufferedReader((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }
}
